$date
	Wed Apr 17 13:50:31 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module processor_tb $end
$var wire 128 ! result [127:0] $end
$var wire 128 " reg_write_data_wire [127:0] $end
$var wire 128 # reg_read_data2_wire [127:0] $end
$var wire 128 $ reg_read_data1_wire [127:0] $end
$var wire 2 % offset_wire [1:0] $end
$var wire 32 & mem_write_data_wire [31:0] $end
$var wire 32 ' instruction [31:0] $end
$var reg 1 ( clk $end
$var reg 1 ) reset $end
$scope module uut $end
$var wire 1 ( clk $end
$var wire 8 * jump_address_wire [7:0] $end
$var wire 1 + jump_en_wire $end
$var wire 1 ) reset $end
$var wire 1 , zero_flag $end
$var wire 1 - vector $end
$var wire 128 . result [127:0] $end
$var wire 1 / reg_write_enable_wire $end
$var wire 128 0 reg_write_data_wire [127:0] $end
$var wire 4 1 reg_write_address_wire [3:0] $end
$var wire 128 2 reg_read_data2_wire [127:0] $end
$var wire 128 3 reg_read_data1_wire [127:0] $end
$var wire 4 4 reg_read_address2_wire [3:0] $end
$var wire 4 5 reg_read_address1_wire [3:0] $end
$var wire 8 6 output_rw_address [7:0] $end
$var wire 4 7 op_wire [3:0] $end
$var wire 2 8 offset_wire [1:0] $end
$var wire 1 9 mem_write_enable $end
$var wire 32 : mem_write_data_wire [31:0] $end
$var wire 32 ; mem_read_data2_wire [31:0] $end
$var wire 8 < mem_read_address1_wire [7:0] $end
$var wire 2 = mem_load_select [1:0] $end
$var wire 1 > mem_load_enable $end
$var wire 32 ? instruction [31:0] $end
$var wire 1 @ immidiate_en_wire $end
$var wire 32 A immidiate_data_wire [31:0] $end
$scope module add_memory_address_connection $end
$var wire 8 B address [7:0] $end
$var wire 2 C offset [1:0] $end
$var reg 8 D outputAddress [7:0] $end
$upscope $end
$scope module alu_connection $end
$var wire 128 E operand2 [127:0] $end
$var wire 128 F operand1 [127:0] $end
$var wire 4 G op [3:0] $end
$var reg 128 H result [127:0] $end
$var reg 1 , zero_flag $end
$upscope $end
$scope module control_unit_connection $end
$var wire 32 I instruction [31:0] $end
$var reg 32 J immidiate_data [31:0] $end
$var reg 1 @ immidiate_en $end
$var reg 32 K jump_address [31:0] $end
$var reg 1 L jump_en $end
$var reg 1 > mem_load_enable $end
$var reg 2 M mem_load_select [1:0] $end
$var reg 1 9 mem_write_enable $end
$var reg 4 N op [3:0] $end
$var reg 4 O reg_read_address1 [3:0] $end
$var reg 4 P reg_read_address2 [3:0] $end
$var reg 4 Q reg_write_address [3:0] $end
$var reg 1 / reg_write_enable $end
$var reg 1 - vector $end
$upscope $end
$scope module counter_column_connection $end
$var wire 1 ( clk $end
$var wire 2 R counter_val [1:0] $end
$var wire 1 - reset $end
$var reg 2 S counter [1:0] $end
$upscope $end
$scope module memory_connection $end
$var wire 1 ( clk $end
$var wire 1 9 mem_write_enable $end
$var wire 8 T read_address2 [7:0] $end
$var wire 32 U read_data1 [31:0] $end
$var wire 32 V read_data2 [31:0] $end
$var wire 8 W write_address [7:0] $end
$var wire 32 X write_data [31:0] $end
$var wire 8 Y read_address1 [7:0] $end
$upscope $end
$scope module program_counter_connection $end
$var wire 1 ( clk $end
$var wire 8 Z jump_address [7:0] $end
$var wire 1 + jump_enable $end
$var wire 2 [ offset [1:0] $end
$var wire 1 ) reset $end
$var wire 1 - vector $end
$var wire 8 \ address [7:0] $end
$var reg 8 ] counter [7:0] $end
$upscope $end
$scope module register_set_connection $end
$var wire 1 ( clk $end
$var wire 1 > mem_load_enable $end
$var wire 4 ^ readAddress1 [3:0] $end
$var wire 4 _ readAddress2 [3:0] $end
$var wire 128 ` readData1 [127:0] $end
$var wire 128 a readData2 [127:0] $end
$var wire 1 ) reset $end
$var wire 2 b writeAddressC [1:0] $end
$var wire 4 c writeAddressR [3:0] $end
$var wire 128 d writeData [127:0] $end
$var wire 1 / writeEnable $end
$var integer 32 e i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 e
b1 d
b0 c
b0 b
b0 a
b0 `
b1 _
b0 ^
b1111 ]
b1111 \
b0 [
bz Z
b1111 Y
b0 X
bx W
b1 V
b11100111000000000000000000000001 U
b1 T
b0 S
b0 R
b0 Q
b1 P
b0 O
b1000 N
b1 M
0L
bx K
b1 J
b11100111000000000000000000000001 I
b0 H
b1000 G
b0 F
b0x E
b1 D
b0 C
b1 B
b1 A
x@
b11100111000000000000000000000001 ?
1>
b1 =
b1111 <
b1 ;
b0 :
09
b0 8
b1000 7
b1 6
b0 5
b1 4
b0 3
b0 2
b0 1
b1 0
1/
b0 .
0-
1,
z+
bz *
0)
0(
b11100111000000000000000000000001 '
b0 &
b0 %
b0 $
b0 #
b1 "
b0 !
$end
#5
b11 d
b11 "
b11 0
b11 ;
b11 V
b10 T
b10 6
b10 D
b1 %
b1 8
b1 C
b1 R
b1 S
b1 [
b1 b
b0 X
b0 &
b0 :
b1 $
b1 3
b1 F
b1 `
1(
#10
0(
#15
b111 d
b111 "
b111 0
b111 ;
b111 V
b11 T
b11 6
b11 D
b10 %
b10 8
b10 C
b10 R
b10 S
b10 [
b10 b
b0 X
b0 &
b0 :
b1100000000000000000000000000000001 $
b1100000000000000000000000000000001 3
b1100000000000000000000000000000001 F
b1100000000000000000000000000000001 `
1(
#20
0(
#25
b1111 d
b1111 "
b1111 0
b1111 ;
b1111 V
b100 T
b100 6
b100 D
b11 %
b11 8
b11 C
b11 R
b11 S
b11 [
b11 b
b0 X
b0 &
b0 :
b1110000000000000000000000000000001100000000000000000000000000000001 $
b1110000000000000000000000000000001100000000000000000000000000000001 3
b1110000000000000000000000000000001100000000000000000000000000000001 F
b1110000000000000000000000000000001100000000000000000000000000000001 `
1(
#30
0(
#35
b0 d
b0 "
b0 0
b0 ;
b0 V
b0 T
b0 B
b0xxxx00000000000000000000000000000xxx000000000000000000000000000000xx0000000000000000000000000000000x E
b0 6
b0 D
0-
b0 A
b0 J
b1 1
b1 Q
b1 c
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 #
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 2
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 a
b0 4
b0 P
b0 _
b1 5
b1 O
b1 ^
b0 %
b0 8
b0 C
b0 R
b0 S
b0 [
b0 b
b11100111000000010001000000000000 '
b11100111000000010001000000000000 ?
b11100111000000010001000000000000 I
b11100111000000010001000000000000 U
b10000 <
b10000 Y
b10000 \
b10000 ]
b0 X
b0 &
b0 :
b0 $
b0 3
b0 F
b0 `
1(
#40
0(
#45
b1 d
b1 "
b1 0
b1 ;
b1 V
b1 T
b1 6
b1 D
b1 %
b1 8
b1 C
b1 R
b1 S
b1 [
b1 b
1(
#50
0(
#55
b11 d
b11 "
b11 0
b11 ;
b11 V
b10 T
b10 6
b10 D
b10 %
b10 8
b10 C
b10 R
b10 S
b10 [
b10 b
b0 X
b0 &
b0 :
b100000000000000000000000000000000 $
b100000000000000000000000000000000 3
b100000000000000000000000000000000 F
b100000000000000000000000000000000 `
1(
#60
0(
#65
b111 d
b111 "
b111 0
b111 ;
b111 V
b11 T
b11 6
b11 D
b11 %
b11 8
b11 C
b11 R
b11 S
b11 [
b11 b
b0 X
b0 &
b0 :
b110000000000000000000000000000000100000000000000000000000000000000 $
b110000000000000000000000000000000100000000000000000000000000000000 3
b110000000000000000000000000000000100000000000000000000000000000000 F
b110000000000000000000000000000000100000000000000000000000000000000 `
1(
#70
0(
#75
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 d
bx ;
bx V
bx T
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 "
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 0
bx B
b111000000000000000000000000000000110000000000000000000000000000000100000000000000000000000000000000 E
0,
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 !
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 .
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 H
bx 6
bx D
1-
0>
b111000000000000000000000000000000110000000000000000000000000000000100000000000000000000000000000000 #
b111000000000000000000000000000000110000000000000000000000000000000100000000000000000000000000000000 2
b111000000000000000000000000000000110000000000000000000000000000000100000000000000000000000000000000 a
b1 4
b1 P
b1 _
bx A
bx J
0@
b0 1
b0 Q
b0 c
b0 5
b0 O
b0 ^
b101 7
b101 G
b101 N
b0 %
b0 8
b0 C
b0 R
b0 S
b0 [
b0 b
b11100000101000000000000000000001 '
b11100000101000000000000000000001 ?
b11100000101000000000000000000001 I
b11100000101000000000000000000001 U
b10001 <
b10001 Y
b10001 \
b10001 ]
b1 X
b1 &
b1 :
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 $
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 3
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 F
b1111000000000000000000000000000001110000000000000000000000000000001100000000000000000000000000000001 `
1(
#80
0(
#85
b1 6
b1 D
b1 W
b1 B
0-
19
bx =
bx M
0/
b1 A
b1 J
b1100 7
b1100 G
b1100 N
b11100111100100000000000000000001 '
b11100111100100000000000000000001 ?
b11100111100100000000000000000001 I
b11100111100100000000000000000001 U
b10010 <
b10010 Y
b10010 \
b10010 ]
b11 d
b11 "
b11 0
b11 !
b11 .
b11 H
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 $
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 3
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 F
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 `
1(
#90
0(
#95
b100 X
b100 &
b100 :
b10 W
b10 6
b10 D
b1 %
b1 8
b1 C
b1 R
b1 S
b1 [
b1 b
1(
#100
0(
#105
b1010 X
b1010 &
b1010 :
b11 W
b11 6
b11 D
b10 %
b10 8
b10 C
b10 R
b10 S
b10 [
b10 b
1(
#110
0(
#115
b10110 X
b10110 &
b10110 :
b100 W
b100 6
b100 D
b11 %
b11 8
b11 C
b11 R
b11 S
b11 [
b11 b
1(
#120
0(
#125
b1 d
b1 ;
b1 V
b1 T
b1 "
b1 0
1,
b0 !
b0 .
b0 H
b1 X
b1 &
b1 :
09
1>
b1 =
b1 M
1/
0-
b1000 7
b1000 G
b1000 N
bx W
b1 6
b1 D
b11100111000000000000000000000001 '
b11100111000000000000000000000001 ?
b11100111000000000000000000000001 I
b11100111000000000000000000000001 U
b10011 <
b10011 Y
b10011 \
b10011 ]
b0 %
b0 8
b0 C
b0 R
b0 S
b0 [
b0 b
1(
#130
0(
#135
b100 X
b100 &
b100 :
b100 d
b100 "
b100 0
b100 ;
b100 V
b10 T
b10 6
b10 D
b1 %
b1 8
b1 C
b1 R
b1 S
b1 [
b1 b
1(
#140
0(
#145
b1010 d
b1010 "
b1010 0
b1010 X
b1010 &
b1010 :
b1010 ;
b1010 V
b11 T
b11 6
b11 D
b10 %
b10 8
b10 C
b10 R
b10 S
b10 [
b10 b
1(
#150
0(
#155
b10110 X
b10110 &
b10110 :
b10110 d
b10110 "
b10110 0
b10110 ;
b10110 V
b100 T
b100 6
b100 D
b11 %
b11 8
b11 C
b11 R
b11 S
b11 [
b11 b
1(
#160
0(
#165
b1 d
b1 "
b1 0
b110000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000 !
b110000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000 .
b110000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000 H
b1 X
b1 &
b1 :
b1 ;
b1 V
b1 T
1-
b0 7
b0 G
b0 N
b1 6
b1 D
b11100110000000000000000000000001 '
b11100110000000000000000000000001 ?
b11100110000000000000000000000001 I
b11100110000000000000000000000001 U
b10100 <
b10100 Y
b10100 \
b10100 ]
b0 %
b0 8
b0 C
b0 R
b0 S
b0 [
b0 b
1(
#170
0(
#175
0,
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 !
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 .
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 H
bx 6
bx D
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 d
bx ;
bx V
bx T
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 "
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 0
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 E
bx B
0>
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 #
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 2
b10110000000000000000000000000000010100000000000000000000000000000010000000000000000000000000000000001 a
b0 4
b0 P
b0 _
bx A
bx J
b0 '
b0 ?
b0 I
b0 U
b10101 <
b10101 Y
b10101 \
b10101 ]
1(
#180
0(
